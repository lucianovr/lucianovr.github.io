<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hello World Blog]]></title>
  <link href="http://lucianovr.github.io/atom.xml" rel="self"/>
  <link href="http://lucianovr.github.io/"/>
  <updated>2017-10-09T19:52:26-03:00</updated>
  <id>http://lucianovr.github.io/</id>
  <author>
    <name><![CDATA[Luciano Ribeiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ataque Fulminante]]></title>
    <link href="http://lucianovr.github.io/blog/2017/10/06/ataque-fulminante/"/>
    <updated>2017-10-06T23:34:01-03:00</updated>
    <id>http://lucianovr.github.io/blog/2017/10/06/ataque-fulminante</id>
    <content type="html"><![CDATA[<script type="text/javascript" async
  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML">
</script>


<p>$$
 f(x)=(x+a)(x+b) + \theta \sum_{i=0}^{n} a_{i}<br/>
$$</p>

<p>A equacao \(f(x)=(x+a)(x+b) + \theta + \sum_{i=0}^{n} \)  esta ok</p>

<p>\[6<sup>2</sup> - 5 = 36-5 = 31 \]</p>

<p>\begin{equation}
a = bq + r
\end{equation}</p>

<p>Problema <a href="https://www.urionlinejudge.com.br/judge/pt/problems/view/1102">Ataque Fulminante</a>.</p>

<p>Bom, de início parece ser um problema difícil, mas irei falar de algumas técnicas de o deixam bastante simples até.</p>

<p><img src="https://lucianovr.github.io/images/ataque_fulminante_1102.png" alt="alt" /></p>

<p>Resumindo o enunciado, o problema dos dá as coordenadas do círculo e seu raio, chamaremos de (Xc,Yc,R), as coordenadas do canhão (X, Y), o seu ângulo de abertura $\theta$ e sua direção [\alpha].</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='C++'><span class='line'><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">V</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">V</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
</span><span class='line'>    <span class="n">V</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
